{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prateek\\\\OneDrive\\\\Desktop\\\\Practice\\\\JObSearch\\\\JobSearch-Portal\\\\Frontend\\\\src\\\\Contexts\\\\auth-context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Create the AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// AuthProvider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  // State for authentication, role, and token\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem(\"accessToken\"));\n  const [userRole, setUserRole] = useState(localStorage.getItem(\"role\") || \"\");\n  const [accessToken, setAccessToken] = useState(localStorage.getItem(\"accessToken\"));\n\n  // Function to handle login\n  const login = async (email, password) => {\n    const loginData = {\n      email,\n      password\n    };\n    try {\n      const response = await axios.post(\"http://localhost:3000/auth/login\", loginData);\n      if (response.status === 200) {\n        const {\n          accessToken,\n          role,\n          username\n        } = response.data;\n\n        // Store the tokens and role in localStorage\n        localStorage.setItem(\"accessToken\", accessToken);\n        localStorage.setItem(\"role\", role);\n        localStorage.setItem(\"username\", username);\n\n        // Set state\n        setAccessToken(accessToken);\n        setIsAuthenticated(true);\n        setUserRole(role);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Login failed:\", error);\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Login failed\");\n    }\n  };\n\n  // Function to log out\n  const logout = () => {\n    localStorage.removeItem(\"accessToken\");\n    localStorage.removeItem(\"role\");\n    localStorage.removeItem(\"username\");\n    setIsAuthenticated(false);\n    setUserRole(\"\");\n    setAccessToken(null);\n  };\n\n  // Persist login state on page reload\n  useEffect(() => {\n    const storedAccessToken = localStorage.getItem(\"accessToken\");\n    const storedUserRole = localStorage.getItem(\"role\");\n    if (storedAccessToken) {\n      setAccessToken(storedAccessToken);\n      setIsAuthenticated(true);\n      setUserRole(storedUserRole || \"\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      userRole,\n      login,\n      logout,\n      accessToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the AuthContext\n_s(AuthProvider, \"xmgPesHQYDstLfI7oY5e6As2olY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","localStorage","getItem","userRole","setUserRole","accessToken","setAccessToken","login","email","password","loginData","response","post","status","role","username","data","setItem","error","_error$response","_error$response$data","console","Error","message","logout","removeItem","storedAccessToken","storedUserRole","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/Prateek/OneDrive/Desktop/Practice/JObSearch/JobSearch-Portal/Frontend/src/Contexts/auth-context.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// Create the AuthContext\r\nconst AuthContext = createContext();\r\n\r\n// AuthProvider component\r\nexport const AuthProvider = ({ children }) => {\r\n  // State for authentication, role, and token\r\n  const [isAuthenticated, setIsAuthenticated] = useState(\r\n    !!localStorage.getItem(\"accessToken\")\r\n  );\r\n  const [userRole, setUserRole] = useState(localStorage.getItem(\"role\") || \"\");\r\n  const [accessToken, setAccessToken] = useState(\r\n    localStorage.getItem(\"accessToken\")\r\n  );\r\n\r\n  // Function to handle login\r\n  const login = async (email, password) => {\r\n    const loginData = { email, password };\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:3000/auth/login\",\r\n        loginData\r\n      );\r\n      if (response.status === 200) {\r\n        const { accessToken, role, username } = response.data;\r\n\r\n        // Store the tokens and role in localStorage\r\n        localStorage.setItem(\"accessToken\", accessToken);\r\n        localStorage.setItem(\"role\", role);\r\n        localStorage.setItem(\"username\", username);\r\n\r\n        // Set state\r\n        setAccessToken(accessToken);\r\n        setIsAuthenticated(true);\r\n        setUserRole(role);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login failed:\", error);\r\n      throw new Error(error.response?.data?.message || \"Login failed\");\r\n    }\r\n  };\r\n\r\n  // Function to log out\r\n  const logout = () => {\r\n    localStorage.removeItem(\"accessToken\");\r\n    localStorage.removeItem(\"role\");\r\n    localStorage.removeItem(\"username\");\r\n    setIsAuthenticated(false);\r\n    setUserRole(\"\");\r\n    setAccessToken(null);\r\n  };\r\n\r\n  // Persist login state on page reload\r\n  useEffect(() => {\r\n    const storedAccessToken = localStorage.getItem(\"accessToken\");\r\n    const storedUserRole = localStorage.getItem(\"role\");\r\n\r\n    if (storedAccessToken) {\r\n      setAccessToken(storedAccessToken);\r\n      setIsAuthenticated(true);\r\n      setUserRole(storedUserRole || \"\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        userRole,\r\n        login,\r\n        logout,\r\n        accessToken,\r\n      }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the AuthContext\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}