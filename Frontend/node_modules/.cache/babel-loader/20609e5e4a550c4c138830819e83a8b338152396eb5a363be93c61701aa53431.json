{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prateek\\\\OneDrive\\\\Desktop\\\\Practice\\\\JObSearch\\\\JobSearch-Portal\\\\Frontend\\\\src\\\\Contexts\\\\auth-context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Create the AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// AuthProvider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  // State for authentication, role, and tokens\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem(\"accessToken\") || !!localStorage.getItem(\"companyToken\"));\n  const [userRole, setUserRole] = useState(localStorage.getItem(\"role\") || \"\");\n  const [accessToken, setAccessToken] = useState(localStorage.getItem(\"accessToken\"));\n  const [companyToken, setCompanyToken] = useState(localStorage.getItem(\"companyToken\"));\n  const [username, setUsername] = useState(localStorage.getItem(\"username\") || \"\");\n  const [companyName, setCompanyName] = useState(localStorage.getItem(\"companyName\") || \"\");\n\n  // Function for user login\n  const userLogin = async (email, password) => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/auth/login\", {\n        email,\n        password\n      });\n      if (response.status === 200) {\n        const {\n          accessToken,\n          role,\n          username\n        } = response.data;\n\n        // Store tokens and user details in localStorage\n        localStorage.setItem(\"accessToken\", accessToken);\n        localStorage.setItem(\"role\", role);\n        localStorage.setItem(\"username\", username);\n\n        // Update state\n        setAccessToken(accessToken);\n        setUsername(username);\n        setIsAuthenticated(true);\n        setUserRole(role);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"User login failed:\", error);\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Login failed\");\n    }\n  };\n\n  // Function for company login\n  const companyLogin = async (email, password) => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/auth/company/login\", {\n        email,\n        password\n      });\n      if (response.status === 200) {\n        const {\n          token,\n          role,\n          companyName\n        } = response.data;\n\n        // Store token and company details in localStorage\n        localStorage.setItem(\"companyToken\", token);\n        localStorage.setItem(\"role\", role);\n        localStorage.setItem(\"companyName\", companyName);\n\n        // Update state\n        setCompanyToken(token);\n        setCompanyName(companyName);\n        setIsAuthenticated(true);\n        setUserRole(role);\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(\"Company login failed:\", error);\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Login failed\");\n    }\n  };\n\n  // Function to log out\n  const logout = () => {\n    localStorage.removeItem(\"accessToken\");\n    localStorage.removeItem(\"companyToken\");\n    localStorage.removeItem(\"role\");\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"companyName\");\n    setIsAuthenticated(false);\n    setUserRole(\"\");\n    setAccessToken(null);\n    setCompanyToken(null);\n    setUsername(null);\n    setCompanyName(null);\n  };\n\n  // Persist login state on page reload\n  useEffect(() => {\n    const storedAccessToken = localStorage.getItem(\"accessToken\");\n    const storedCompanyToken = localStorage.getItem(\"companyToken\");\n    const storedRole = localStorage.getItem(\"role\");\n    if (storedAccessToken || storedCompanyToken) {\n      setAccessToken(storedAccessToken);\n      setCompanyToken(storedCompanyToken);\n      setIsAuthenticated(true);\n      setUserRole(storedRole || \"\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      userRole,\n      username,\n      companyName,\n      userLogin,\n      companyLogin,\n      logout,\n      accessToken,\n      companyToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the AuthContext\n_s(AuthProvider, \"Ue2kZ0e9wCAUrB5rz+t6s7iAS3o=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","localStorage","getItem","userRole","setUserRole","accessToken","setAccessToken","companyToken","setCompanyToken","username","setUsername","companyName","setCompanyName","userLogin","email","password","response","post","status","role","data","setItem","error","_error$response","_error$response$data","console","Error","message","companyLogin","token","_error$response2","_error$response2$data","logout","removeItem","storedAccessToken","storedCompanyToken","storedRole","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/Prateek/OneDrive/Desktop/Practice/JObSearch/JobSearch-Portal/Frontend/src/Contexts/auth-context.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// Create the AuthContext\r\nconst AuthContext = createContext();\r\n\r\n// AuthProvider component\r\nexport const AuthProvider = ({ children }) => {\r\n  // State for authentication, role, and tokens\r\n  const [isAuthenticated, setIsAuthenticated] = useState(\r\n    !!localStorage.getItem(\"accessToken\") || !!localStorage.getItem(\"companyToken\")\r\n  );\r\n  const [userRole, setUserRole] = useState(localStorage.getItem(\"role\") || \"\");\r\n  const [accessToken, setAccessToken] = useState(localStorage.getItem(\"accessToken\"));\r\n  const [companyToken, setCompanyToken] = useState(localStorage.getItem(\"companyToken\"));\r\n  const [username, setUsername] = useState(localStorage.getItem(\"username\") || \"\");\r\n  const [companyName, setCompanyName] = useState(localStorage.getItem(\"companyName\") || \"\");\r\n\r\n  // Function for user login\r\n  const userLogin = async (email, password) => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/auth/login\", {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const { accessToken, role, username } = response.data;\r\n\r\n        // Store tokens and user details in localStorage\r\n        localStorage.setItem(\"accessToken\", accessToken);\r\n        localStorage.setItem(\"role\", role);\r\n        localStorage.setItem(\"username\", username);\r\n\r\n        // Update state\r\n        setAccessToken(accessToken);\r\n        setUsername(username);\r\n        setIsAuthenticated(true);\r\n        setUserRole(role);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"User login failed:\", error);\r\n      throw new Error(error.response?.data?.message || \"Login failed\");\r\n    }\r\n  };\r\n\r\n  // Function for company login\r\n  const companyLogin = async (email, password) => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/auth/company/login\",\r\n        { email, password }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        const { token, role, companyName } = response.data;\r\n\r\n        // Store token and company details in localStorage\r\n        localStorage.setItem(\"companyToken\", token);\r\n        localStorage.setItem(\"role\", role);\r\n        localStorage.setItem(\"companyName\", companyName);\r\n\r\n        // Update state\r\n        setCompanyToken(token);\r\n        setCompanyName(companyName);\r\n        setIsAuthenticated(true);\r\n        setUserRole(role);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Company login failed:\", error);\r\n      throw new Error(error.response?.data?.message || \"Login failed\");\r\n    }\r\n  };\r\n\r\n  // Function to log out\r\n  const logout = () => {\r\n    localStorage.removeItem(\"accessToken\");\r\n    localStorage.removeItem(\"companyToken\");\r\n    localStorage.removeItem(\"role\");\r\n    localStorage.removeItem(\"username\");\r\n    localStorage.removeItem(\"companyName\");\r\n\r\n    setIsAuthenticated(false);\r\n    setUserRole(\"\");\r\n    setAccessToken(null);\r\n    setCompanyToken(null);\r\n    setUsername(null);\r\n    setCompanyName(null);\r\n  };\r\n\r\n  // Persist login state on page reload\r\n  useEffect(() => {\r\n    const storedAccessToken = localStorage.getItem(\"accessToken\");\r\n    const storedCompanyToken = localStorage.getItem(\"companyToken\");\r\n    const storedRole = localStorage.getItem(\"role\");\r\n\r\n    if (storedAccessToken || storedCompanyToken) {\r\n      setAccessToken(storedAccessToken);\r\n      setCompanyToken(storedCompanyToken);\r\n      setIsAuthenticated(true);\r\n      setUserRole(storedRole || \"\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        userRole,\r\n        username,\r\n        companyName,\r\n        userLogin,\r\n        companyLogin,\r\n        logout,\r\n        accessToken,\r\n        companyToken,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the AuthContext\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}