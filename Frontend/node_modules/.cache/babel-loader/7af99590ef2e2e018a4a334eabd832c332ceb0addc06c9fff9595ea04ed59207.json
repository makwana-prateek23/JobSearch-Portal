{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prateek\\\\OneDrive\\\\Desktop\\\\Practice\\\\JObSearch\\\\JobSearch-Portal\\\\Frontend\\\\src\\\\Contexts\\\\Data-context.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataContext = /*#__PURE__*/createContext();\nconst API_URL = \"http://localhost:3000/api\";\nexport const DataProvider = ({\n  children\n}) => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [internships, setInternships] = useState([]);\n  const [feedbacks, setFeedback] = useState([]);\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        const response = await fetch(API_URL + \"/jobs\");\n        const data = await response.json();\n        setJobs(data);\n      } catch (error) {\n        console.error(\"Error fetching jobs\", error);\n      }\n    };\n    fetchJobs();\n  }, []);\n  useEffect(() => {\n    const fetchInternships = async () => {\n      try {\n        const response = await fetch(API_URL + \"/internship\");\n        const data = await response.json();\n        setInternships(data);\n      } catch (error) {\n        console.error(\"Error Fetching Internship\", error);\n      }\n    };\n    fetchInternships();\n  }, []);\n  useEffect(() => {\n    const fetchFeedbacks = async () => {\n      try {\n        const response = await fetch(API_URL + \"/feedback\");\n        const data = await response.json();\n        setFeedback(data);\n      } catch (error) {\n        console.error(\"Error Fetching Feedbaks\", error);\n      }\n    };\n    fetchFeedbacks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      jobs,\n      internships,\n      feedbacks\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(DataProvider, \"leOmkIjzDDRfMO+H1rLHYdcj1dI=\");\n_c = DataProvider;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","DataContext","API_URL","DataProvider","children","_s","jobs","setJobs","internships","setInternships","feedbacks","setFeedback","fetchJobs","response","fetch","data","json","error","console","fetchInternships","fetchFeedbacks","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Prateek/OneDrive/Desktop/Practice/JObSearch/JobSearch-Portal/Frontend/src/Contexts/Data-context.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const DataContext = createContext();\r\n\r\nconst API_URL = \"http://localhost:3000/api\";\r\nexport const DataProvider = ({ children }) => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [internships, setInternships] = useState([]);\r\n  const [feedbacks, setFeedback] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchJobs = async () => {\r\n      try {\r\n        const response = await fetch(API_URL + \"/jobs\");\r\n        const data = await response.json();\r\n        setJobs(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching jobs\", error);\r\n      }\r\n    };\r\n    fetchJobs();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchInternships = async () => {\r\n      try {\r\n        const response = await fetch(API_URL + \"/internship\");\r\n        const data = await response.json();\r\n        setInternships(data);\r\n      } catch (error) {\r\n        console.error(\"Error Fetching Internship\", error);\r\n      }\r\n    };\r\n    fetchInternships();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchFeedbacks = async () => {\r\n      try {\r\n        const response = await fetch(API_URL + \"/feedback\");\r\n        const data = await response.json();\r\n        setFeedback(data);\r\n      } catch (error) {\r\n        console.error(\"Error Fetching Feedbaks\", error);\r\n      }\r\n    };\r\n    fetchFeedbacks();\r\n  }, []);\r\n\r\n  return (\r\n    <DataContext.Provider value={{ jobs, internships, feedbacks }}>\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,MAAMM,OAAO,GAAG,2BAA2B;AAC3C,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACa,SAAS,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACZ,OAAO,GAAG,OAAO,CAAC;QAC/C,MAAMa,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCT,OAAO,CAACQ,IAAI,CAAC;MACf,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;IACF,CAAC;IACDL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAENd,SAAS,CAAC,MAAM;IACd,MAAMqB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAACZ,OAAO,GAAG,aAAa,CAAC;QACrD,MAAMa,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCP,cAAc,CAACM,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IACDE,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAENrB,SAAS,CAAC,MAAM;IACd,MAAMsB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAACZ,OAAO,GAAG,WAAW,CAAC;QACnD,MAAMa,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,WAAW,CAACI,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IACDG,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEpB,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEhB,IAAI;MAAEE,WAAW;MAAEE;IAAU,CAAE;IAAAN,QAAA,EAC3DA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACrB,EAAA,CAjDWF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}