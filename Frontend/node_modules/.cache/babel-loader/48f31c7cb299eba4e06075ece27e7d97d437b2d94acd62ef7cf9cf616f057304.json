{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prateek\\\\OneDrive\\\\Desktop\\\\Practice\\\\JObSearch\\\\JobSearch-Portal\\\\Frontend\\\\src\\\\components\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Navigate, Outlet } from \"react-router-dom\";\nimport { useAuth } from \"../Contexts/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  requiredRole\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    userRole\n  } = useAuth();\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n  if (requiredRole && userRole !== requiredRole) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this); // Redirect if the role doesn't match\n  }\n\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this); // Render child routes if authenticated and authorized\n};\n_s(PrivateRoute, \"OxzuvXFGyCfv+bJh9VAutaejTA8=\", false, function () {\n  return [useAuth];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","useAuth","jsxDEV","_jsxDEV","PrivateRoute","requiredRole","_s","isAuthenticated","userRole","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Prateek/OneDrive/Desktop/Practice/JObSearch/JobSearch-Portal/Frontend/src/components/PrivateRoute.js"],"sourcesContent":["import React from \"react\";\r\nimport { Navigate, Outlet } from \"react-router-dom\";\r\nimport { useAuth } from \"../Contexts/auth-context\";\r\n\r\nconst PrivateRoute = ({ requiredRole }) => {\r\n  const { isAuthenticated, userRole } = useAuth();\r\n\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  if (requiredRole && userRole !== requiredRole) {\r\n    return <Navigate to=\"/\" replace />; // Redirect if the role doesn't match\r\n  }\r\n\r\n  return <Outlet />; // Render child routes if authenticated and authorized\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,SAASC,OAAO,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM;IAAEC,eAAe;IAAEC;EAAS,CAAC,GAAGP,OAAO,CAAC,CAAC;EAE/C,IAAI,CAACM,eAAe,EAAE;IACpB,oBAAOJ,OAAA,CAACJ,QAAQ;MAACU,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;EAEA,IAAIT,YAAY,IAAIG,QAAQ,KAAKH,YAAY,EAAE;IAC7C,oBAAOF,OAAA,CAACJ,QAAQ;MAACU,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC,CAAC;EACtC;;EAEA,oBAAOX,OAAA,CAACH,MAAM;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC,CAAC;AACrB,CAAC;AAACR,EAAA,CAZIF,YAAY;EAAA,QACsBH,OAAO;AAAA;AAAAc,EAAA,GADzCX,YAAY;AAclB,eAAeA,YAAY;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}