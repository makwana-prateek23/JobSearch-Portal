{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prateek\\\\OneDrive\\\\Desktop\\\\Practice\\\\JObSearch\\\\JobSearch-Portal\\\\Frontend\\\\src\\\\Contexts\\\\auth-context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem(\"accessToken\"));\n  const [userRole, setUserRole] = useState(localStorage.getItem(\"role\") || \"\");\n  const [accessToken, setAccessToken] = useState(localStorage.getItem(\"accessToken\"));\n  const [refreshToken, setRefreshToken] = useState(localStorage.getItem(\"refreshToken\"));\n  const login = async (email, password) => {\n    const loginData = {\n      email,\n      password\n    };\n    try {\n      const response = await axios.post(\"http://localhost:3000/auth/login\", loginData);\n      if (response.status === 200) {\n        const {\n          accessToken,\n          refreshToken,\n          role\n        } = response.data;\n        localStorage.setItem(\"accessToken\", accessToken);\n        localStorage.setItem(\"refreshToken\", refreshToken);\n        localStorage.setItem(\"role\", role);\n        setAccessToken(accessToken);\n        setRefreshToken(refreshToken);\n        setIsAuthenticated(true);\n        setUserRole(role);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Login failed:\", error);\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Login failed\");\n    }\n  };\n  const refreshTokenHandler = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:3000/auth/refresh-token\", {\n        refreshToken\n      });\n      if (response.status === 200) {\n        const {\n          accessToken\n        } = response.data;\n        localStorage.setItem(\"accessToken\", accessToken);\n        setAccessToken(accessToken);\n        return accessToken;\n      }\n    } catch (error) {\n      var _error$response2, _error$response3;\n      console.error(\"Failed to refresh token:\", error);\n      if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 403 || ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n        logout();\n      }\n    }\n  };\n  const logout = () => {\n    localStorage.clear();\n    setIsAuthenticated(false);\n    setUserRole(\"\");\n    setAccessToken(null);\n    setRefreshToken(null);\n  };\n  useEffect(() => {\n    const refreshInterval = setInterval(async () => {\n      if (refreshToken) {\n        await refreshTokenHandler();\n      }\n    }, 15 * 60 * 1000); // Adjust interval as needed\n\n    return () => clearInterval(refreshInterval);\n  }, [refreshToken]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      userRole,\n      login,\n      logout,\n      refreshTokenHandler,\n      accessToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"rrWrkBC8ZoYwVyv5TVgQ9PImHog=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","localStorage","getItem","userRole","setUserRole","accessToken","setAccessToken","refreshToken","setRefreshToken","login","email","password","loginData","response","post","status","role","data","setItem","error","_error$response","_error$response$data","console","Error","message","refreshTokenHandler","_error$response2","_error$response3","logout","clear","refreshInterval","setInterval","clearInterval","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/Prateek/OneDrive/Desktop/Practice/JObSearch/JobSearch-Portal/Frontend/src/Contexts/auth-context.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem(\"accessToken\"));\r\n  const [userRole, setUserRole] = useState(localStorage.getItem(\"role\") || \"\");\r\n  const [accessToken, setAccessToken] = useState(localStorage.getItem(\"accessToken\"));\r\n  const [refreshToken, setRefreshToken] = useState(localStorage.getItem(\"refreshToken\"));\r\n\r\n  const login = async (email, password) => {\r\n    const loginData = { email, password };\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:3000/auth/login\", loginData);\r\n      if (response.status === 200) {\r\n        const { accessToken, refreshToken, role } = response.data;\r\n        localStorage.setItem(\"accessToken\", accessToken);\r\n        localStorage.setItem(\"refreshToken\", refreshToken);\r\n        localStorage.setItem(\"role\", role);\r\n        setAccessToken(accessToken);\r\n        setRefreshToken(refreshToken);\r\n        setIsAuthenticated(true);\r\n        setUserRole(role);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login failed:\", error);\r\n      throw new Error(error.response?.data?.message || \"Login failed\");\r\n    }\r\n  };\r\n\r\n  const refreshTokenHandler = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:3000/auth/refresh-token\", { refreshToken });\r\n      if (response.status === 200) {\r\n        const { accessToken } = response.data;\r\n        localStorage.setItem(\"accessToken\", accessToken);\r\n        setAccessToken(accessToken);\r\n        return accessToken;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to refresh token:\", error);\r\n      if (error.response?.status === 403 || error.response?.status === 401) {\r\n        logout();\r\n      }\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.clear();\r\n    setIsAuthenticated(false);\r\n    setUserRole(\"\");\r\n    setAccessToken(null);\r\n    setRefreshToken(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const refreshInterval = setInterval(async () => {\r\n      if (refreshToken) {\r\n        await refreshTokenHandler();\r\n      }\r\n    }, 15 * 60 * 1000); // Adjust interval as needed\r\n\r\n    return () => clearInterval(refreshInterval);\r\n  }, [refreshToken]);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ isAuthenticated, userRole, login, logout, refreshTokenHandler, accessToken }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAACW,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;EAC7F,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAACW,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;EAC5E,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAACW,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;EACnF,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAACW,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC;EAEtF,MAAMO,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,MAAMC,SAAS,GAAG;MAAEF,KAAK;MAAEC;IAAS,CAAC;IAErC,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAC,kCAAkC,EAAEF,SAAS,CAAC;MAChF,IAAIC,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAM;UAAEV,WAAW;UAAEE,YAAY;UAAES;QAAK,CAAC,GAAGH,QAAQ,CAACI,IAAI;QACzDhB,YAAY,CAACiB,OAAO,CAAC,aAAa,EAAEb,WAAW,CAAC;QAChDJ,YAAY,CAACiB,OAAO,CAAC,cAAc,EAAEX,YAAY,CAAC;QAClDN,YAAY,CAACiB,OAAO,CAAC,MAAM,EAAEF,IAAI,CAAC;QAClCV,cAAc,CAACD,WAAW,CAAC;QAC3BG,eAAe,CAACD,YAAY,CAAC;QAC7BP,kBAAkB,CAAC,IAAI,CAAC;QACxBI,WAAW,CAACY,IAAI,CAAC;MACnB;IACF,CAAC,CAAC,OAAOG,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACdC,OAAO,CAACH,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,MAAM,IAAII,KAAK,CAAC,EAAAH,eAAA,GAAAD,KAAK,CAACN,QAAQ,cAAAO,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBH,IAAI,cAAAI,oBAAA,uBAApBA,oBAAA,CAAsBG,OAAO,KAAI,cAAc,CAAC;IAClE;EACF,CAAC;EAED,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAC,0CAA0C,EAAE;QAAEP;MAAa,CAAC,CAAC;MAC/F,IAAIM,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAM;UAAEV;QAAY,CAAC,GAAGQ,QAAQ,CAACI,IAAI;QACrChB,YAAY,CAACiB,OAAO,CAAC,aAAa,EAAEb,WAAW,CAAC;QAChDC,cAAc,CAACD,WAAW,CAAC;QAC3B,OAAOA,WAAW;MACpB;IACF,CAAC,CAAC,OAAOc,KAAK,EAAE;MAAA,IAAAO,gBAAA,EAAAC,gBAAA;MACdL,OAAO,CAACH,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,IAAI,EAAAO,gBAAA,GAAAP,KAAK,CAACN,QAAQ,cAAAa,gBAAA,uBAAdA,gBAAA,CAAgBX,MAAM,MAAK,GAAG,IAAI,EAAAY,gBAAA,GAAAR,KAAK,CAACN,QAAQ,cAAAc,gBAAA,uBAAdA,gBAAA,CAAgBZ,MAAM,MAAK,GAAG,EAAE;QACpEa,MAAM,CAAC,CAAC;MACV;IACF;EACF,CAAC;EAED,MAAMA,MAAM,GAAGA,CAAA,KAAM;IACnB3B,YAAY,CAAC4B,KAAK,CAAC,CAAC;IACpB7B,kBAAkB,CAAC,KAAK,CAAC;IACzBI,WAAW,CAAC,EAAE,CAAC;IACfE,cAAc,CAAC,IAAI,CAAC;IACpBE,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACd,MAAMuC,eAAe,GAAGC,WAAW,CAAC,YAAY;MAC9C,IAAIxB,YAAY,EAAE;QAChB,MAAMkB,mBAAmB,CAAC,CAAC;MAC7B;IACF,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;;IAEpB,OAAO,MAAMO,aAAa,CAACF,eAAe,CAAC;EAC7C,CAAC,EAAE,CAACvB,YAAY,CAAC,CAAC;EAElB,oBACEb,OAAA,CAACC,WAAW,CAACsC,QAAQ;IACnBC,KAAK,EAAE;MAAEnC,eAAe;MAAEI,QAAQ;MAAEM,KAAK;MAAEmB,MAAM;MAAEH,mBAAmB;MAAEpB;IAAY,CAAE;IAAAR,QAAA,EAErFA;EAAQ;IAAAsC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACxC,EAAA,CArEWF,YAAY;AAAA2C,EAAA,GAAZ3C,YAAY;AAuEzB,OAAO,MAAM4C,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMpD,UAAU,CAACM,WAAW,CAAC;AAAA;AAAC8C,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}