{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prateek\\\\OneDrive\\\\Desktop\\\\Practice\\\\JObSearch\\\\JobSearch-Portal\\\\Frontend\\\\src\\\\Contexts\\\\auth-context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\n\n// Create the AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// AuthProvider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem(\"accessToken\"));\n  const [userRole, setUserRole] = useState(localStorage.getItem(\"role\") || \"\");\n  const [accessToken, setAccessToken] = useState(localStorage.getItem(\"accessToken\"));\n  const [refreshToken, setRefreshToken] = useState(localStorage.getItem(\"refreshToken\"));\n  const [isRefreshing, setIsRefreshing] = useState(false); // Prevent simultaneous refresh\n\n  // Function to handle login\n  const login = async (email, password) => {\n    const loginData = {\n      email,\n      password\n    };\n    try {\n      const response = await axios.post(\"http://localhost:3000/auth/login\", loginData);\n      if (response.status === 200) {\n        const {\n          accessToken,\n          refreshToken,\n          role,\n          username\n        } = response.data;\n        localStorage.setItem(\"accessToken\", accessToken);\n        localStorage.setItem(\"refreshToken\", refreshToken);\n        localStorage.setItem(\"role\", role);\n        localStorage.setItem(\"username\", username);\n        setAccessToken(accessToken);\n        setRefreshToken(refreshToken);\n        setIsAuthenticated(true);\n        setUserRole(role);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Login failed:\", error);\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Login failed\");\n    }\n  };\n\n  // Function to log out\n  const logout = useCallback(() => {\n    localStorage.removeItem(\"accessToken\");\n    localStorage.removeItem(\"refreshToken\");\n    localStorage.removeItem(\"role\");\n    localStorage.removeItem(\"username\");\n    setIsAuthenticated(false);\n    setUserRole(\"\");\n    setAccessToken(null);\n    setRefreshToken(null);\n  }, []);\n\n  // Function to refresh the access token\n  const refreshTokenHandler = useCallback(async () => {\n    if (isRefreshing) return; // Prevent multiple refresh calls\n    setIsRefreshing(true);\n    try {\n      const response = await axios.post(\"http://localhost:3000/auth/refresh-token\", {\n        refreshToken\n      });\n      if (response.status === 200) {\n        const {\n          accessToken\n        } = response.data;\n        localStorage.setItem(\"accessToken\", accessToken);\n        setAccessToken(accessToken);\n        setIsRefreshing(false);\n        return accessToken;\n      }\n    } catch (error) {\n      var _error$response2, _error$response3;\n      console.error(\"Failed to refresh token:\", error);\n      if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 403 || ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n        logout();\n      }\n      setIsRefreshing(false);\n    }\n  }, [refreshToken, logout, isRefreshing]);\n\n  // Axios interceptor for refreshing token on 401 errors\n  useEffect(() => {\n    const interceptor = axios.interceptors.response.use(response => response, async error => {\n      var _error$response4;\n      if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 401 && refreshToken) {\n        const newAccessToken = await refreshTokenHandler();\n        if (newAccessToken) {\n          error.config.headers[\"Authorization\"] = `Bearer ${newAccessToken}`;\n          return axios(error.config);\n        }\n      }\n      return Promise.reject(error);\n    });\n    return () => axios.interceptors.response.eject(interceptor);\n  }, [refreshToken, refreshTokenHandler]);\n\n  // Set up periodic token refresh\n  useEffect(() => {\n    if (refreshToken) {\n      const refreshInterval = setInterval(() => {\n        refreshTokenHandler();\n      }, 15 * 60 * 1000); // Refresh every 15 minutes\n      return () => clearInterval(refreshInterval); // Cleanup on unmount\n    }\n  }, [refreshToken, refreshTokenHandler]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      userRole,\n      login,\n      logout,\n      refreshTokenHandler,\n      accessToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the AuthContext\n_s(AuthProvider, \"a8DHqCDue9rsb7dxC3hOl05rxBo=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","localStorage","getItem","userRole","setUserRole","accessToken","setAccessToken","refreshToken","setRefreshToken","isRefreshing","setIsRefreshing","login","email","password","loginData","response","post","status","role","username","data","setItem","error","_error$response","_error$response$data","console","Error","message","logout","removeItem","refreshTokenHandler","_error$response2","_error$response3","interceptor","interceptors","use","_error$response4","newAccessToken","config","headers","Promise","reject","eject","refreshInterval","setInterval","clearInterval","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/Prateek/OneDrive/Desktop/Practice/JObSearch/JobSearch-Portal/Frontend/src/Contexts/auth-context.js"],"sourcesContent":["import React, {\r\n  createContext,\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n} from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// Create the AuthContext\r\nconst AuthContext = createContext();\r\n\r\n// AuthProvider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(\r\n    !!localStorage.getItem(\"accessToken\")\r\n  );\r\n  const [userRole, setUserRole] = useState(localStorage.getItem(\"role\") || \"\");\r\n  const [accessToken, setAccessToken] = useState(\r\n    localStorage.getItem(\"accessToken\")\r\n  );\r\n  const [refreshToken, setRefreshToken] = useState(\r\n    localStorage.getItem(\"refreshToken\")\r\n  );\r\n  const [isRefreshing, setIsRefreshing] = useState(false); // Prevent simultaneous refresh\r\n\r\n  // Function to handle login\r\n  const login = async (email, password) => {\r\n    const loginData = { email, password };\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:3000/auth/login\",\r\n        loginData\r\n      );\r\n      if (response.status === 200) {\r\n        const { accessToken, refreshToken, role, username } = response.data;\r\n        localStorage.setItem(\"accessToken\", accessToken);\r\n        localStorage.setItem(\"refreshToken\", refreshToken);\r\n        localStorage.setItem(\"role\", role);\r\n        localStorage.setItem(\"username\", username);\r\n        setAccessToken(accessToken);\r\n        setRefreshToken(refreshToken);\r\n        setIsAuthenticated(true);\r\n        setUserRole(role);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login failed:\", error);\r\n      throw new Error(error.response?.data?.message || \"Login failed\");\r\n    }\r\n  };\r\n\r\n  // Function to log out\r\n  const logout = useCallback(() => {\r\n    localStorage.removeItem(\"accessToken\");\r\n    localStorage.removeItem(\"refreshToken\");\r\n    localStorage.removeItem(\"role\");\r\n    localStorage.removeItem(\"username\");\r\n    setIsAuthenticated(false);\r\n    setUserRole(\"\");\r\n    setAccessToken(null);\r\n    setRefreshToken(null);\r\n  }, []);\r\n\r\n  // Function to refresh the access token\r\n  const refreshTokenHandler = useCallback(async () => {\r\n    if (isRefreshing) return; // Prevent multiple refresh calls\r\n    setIsRefreshing(true);\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:3000/auth/refresh-token\",\r\n        { refreshToken }\r\n      );\r\n      if (response.status === 200) {\r\n        const { accessToken } = response.data;\r\n        localStorage.setItem(\"accessToken\", accessToken);\r\n        setAccessToken(accessToken);\r\n        setIsRefreshing(false);\r\n        return accessToken;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to refresh token:\", error);\r\n      if (error.response?.status === 403 || error.response?.status === 401) {\r\n        logout();\r\n      }\r\n      setIsRefreshing(false);\r\n    }\r\n  }, [refreshToken, logout, isRefreshing]);\r\n\r\n  // Axios interceptor for refreshing token on 401 errors\r\n  useEffect(() => {\r\n    const interceptor = axios.interceptors.response.use(\r\n      (response) => response,\r\n      async (error) => {\r\n        if (error.response?.status === 401 && refreshToken) {\r\n          const newAccessToken = await refreshTokenHandler();\r\n          if (newAccessToken) {\r\n            error.config.headers[\"Authorization\"] = `Bearer ${newAccessToken}`;\r\n            return axios(error.config);\r\n          }\r\n        }\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n    return () => axios.interceptors.response.eject(interceptor);\r\n  }, [refreshToken, refreshTokenHandler]);\r\n\r\n  // Set up periodic token refresh\r\n  useEffect(() => {\r\n    if (refreshToken) {\r\n      const refreshInterval = setInterval(() => {\r\n        refreshTokenHandler();\r\n      }, 15 * 60 * 1000); // Refresh every 15 minutes\r\n      return () => clearInterval(refreshInterval); // Cleanup on unmount\r\n    }\r\n  }, [refreshToken, refreshTokenHandler]);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        userRole,\r\n        login,\r\n        logout,\r\n        refreshTokenHandler,\r\n        accessToken,\r\n      }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the AuthContext\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}