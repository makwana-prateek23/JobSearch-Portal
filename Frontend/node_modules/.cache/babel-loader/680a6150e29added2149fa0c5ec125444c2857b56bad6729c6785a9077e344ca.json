{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prateek\\\\OneDrive\\\\Desktop\\\\Practice\\\\JObSearch\\\\JobSearch-Portal\\\\Frontend\\\\src\\\\Contexts\\\\auth-context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Create the AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userRole, setUserRole] = useState(\"\");\n\n  // Function to refresh the access token\n  const refreshToken = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:3000/auth/refresh-token\");\n      const {\n        accessToken\n      } = response.data;\n      localStorage.setItem(\"accessToken\", accessToken);\n      return accessToken;\n    } catch (error) {\n      console.error(\"Token refresh failed:\", error);\n      logout(); // Log the user out if the refresh fails\n    }\n  };\n\n  // Set up Axios interceptor to handle 401 errors and refresh token\n  useEffect(() => {\n    const interceptor = axios.interceptors.response.use(response => response, async error => {\n      if (error.response && error.response.status === 401) {\n        // Attempt to refresh the token\n        const newAccessToken = await refreshToken();\n        if (newAccessToken) {\n          // Retry the original request with the new access token\n          error.config.headers[\"Authorization\"] = `Bearer ${newAccessToken}`;\n          return axios(error.config);\n        }\n      }\n      return Promise.reject(error);\n    });\n    return () => axios.interceptors.response.eject(interceptor);\n  }, [refreshht]);\n\n  // Initialize authentication state on mount\n  useEffect(() => {\n    const accessToken = localStorage.getItem(\"accessToken\");\n    const role = localStorage.getItem(\"role\");\n    if (accessToken) {\n      setIsAuthenticated(true);\n      setUserRole(role);\n    }\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(\"http://localhost:3000/auth/login\", {\n        email,\n        password\n      });\n      if (response.status === 200) {\n        const {\n          role,\n          accessToken\n        } = response.data;\n        localStorage.setItem(\"accessToken\", accessToken);\n        localStorage.setItem(\"role\", role);\n        setIsAuthenticated(true);\n        setUserRole(role);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Login failed:\", error);\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Login failed\");\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem(\"accessToken\");\n    localStorage.removeItem(\"role\");\n    setIsAuthenticated(false);\n    setUserRole(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      userRole,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the AuthContext\n_s(AuthProvider, \"enM6gVVfwvJZsKfcKtPP0Rc1PuU=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","userRole","setUserRole","refreshToken","response","post","accessToken","data","localStorage","setItem","error","console","logout","interceptor","interceptors","use","status","newAccessToken","config","headers","Promise","reject","eject","refreshht","getItem","role","login","email","password","_error$response","_error$response$data","Error","message","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/Prateek/OneDrive/Desktop/Practice/JObSearch/JobSearch-Portal/Frontend/src/Contexts/auth-context.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// Create the AuthContext\r\nconst AuthContext = createContext();\r\n\r\n// Provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [userRole, setUserRole] = useState(\"\");\r\n\r\n  // Function to refresh the access token\r\n  const refreshToken = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:3000/auth/refresh-token\"\r\n      );\r\n      const { accessToken } = response.data;\r\n      localStorage.setItem(\"accessToken\", accessToken);\r\n      return accessToken;\r\n    } catch (error) {\r\n      console.error(\"Token refresh failed:\", error);\r\n      logout(); // Log the user out if the refresh fails\r\n    }\r\n  };\r\n\r\n  // Set up Axios interceptor to handle 401 errors and refresh token\r\n  useEffect(() => {\r\n    const interceptor = axios.interceptors.response.use(\r\n      (response) => response,\r\n      async (error) => {\r\n        if (error.response && error.response.status === 401) {\r\n          // Attempt to refresh the token\r\n          const newAccessToken = await refreshToken();\r\n          if (newAccessToken) {\r\n            // Retry the original request with the new access token\r\n            error.config.headers[\"Authorization\"] = `Bearer ${newAccessToken}`;\r\n            return axios(error.config);\r\n          }\r\n        }\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n\r\n    return () => axios.interceptors.response.eject(interceptor);\r\n  }, [refreshht]);\r\n\r\n  // Initialize authentication state on mount\r\n  useEffect(() => {\r\n    const accessToken = localStorage.getItem(\"accessToken\");\r\n    const role = localStorage.getItem(\"role\");\r\n    if (accessToken) {\r\n      setIsAuthenticated(true);\r\n      setUserRole(role);\r\n    }\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:3000/auth/login\", {\r\n        email,\r\n        password,\r\n      });\r\n      if (response.status === 200) {\r\n        const { role, accessToken } = response.data;\r\n        localStorage.setItem(\"accessToken\", accessToken);\r\n        localStorage.setItem(\"role\", role);\r\n        setIsAuthenticated(true);\r\n        setUserRole(role);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login failed:\", error);\r\n      throw new Error(error.response?.data?.message || \"Login failed\");\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem(\"accessToken\");\r\n    localStorage.removeItem(\"role\");\r\n    setIsAuthenticated(false);\r\n    setUserRole(\"\");\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, userRole, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the AuthContext\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}