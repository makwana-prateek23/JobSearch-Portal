{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prateek\\\\OneDrive\\\\Desktop\\\\Practice\\\\JObSearch\\\\JobSearch-Portal\\\\Frontend\\\\src\\\\Contexts\\\\auth-context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\n\n// Create the AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// AuthProvider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem(\"accessToken\"));\n  const [userRole, setUserRole] = useState(localStorage.getItem(\"role\") || \"\");\n  const [accessToken, setAccessToken] = useState(localStorage.getItem(\"accessToken\"));\n  const [refreshToken, setRefreshToken] = useState(localStorage.getItem(\"refreshToken\"));\n\n  // Function to handle login\n  const login = async (email, password) => {\n    const loginData = {\n      email,\n      password\n    };\n    try {\n      const response = await axios.post(\"http://localhost:3000/auth/login\", loginData);\n      if (response.status === 200) {\n        const {\n          accessToken,\n          refreshToken,\n          role,\n          username\n        } = response.data;\n        localStorage.setItem(\"accessToken\", accessToken);\n        localStorage.setItem(\"refreshToken\", refreshToken);\n        localStorage.setItem(\"role\", role);\n        localStorage.s;\n        setAccessToken(accessToken);\n        setRefreshToken(refreshToken);\n        setIsAuthenticated(true);\n        setUserRole(role);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Login failed:\", error);\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Login failed\");\n    }\n  };\n  const logout = useCallback(() => {\n    localStorage.clear();\n    setIsAuthenticated(false);\n    setUserRole(\"\");\n    setAccessToken(null);\n    setRefreshToken(null);\n  }, []);\n  // Function to refresh the access token\n  const refreshTokenHandler = useCallback(async () => {\n    try {\n      const response = await axios.post(\"http://localhost:3000/auth/refresh-token\", {\n        refreshToken\n      });\n      if (response.status === 200) {\n        const {\n          accessToken\n        } = response.data;\n        localStorage.setItem(\"accessToken\", accessToken);\n        setAccessToken(accessToken);\n        return accessToken;\n      }\n    } catch (error) {\n      var _error$response2, _error$response3;\n      console.error(\"Failed to refresh token:\", error);\n      if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 403 || ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n        logout();\n      }\n    }\n  }, [refreshToken, logout]);\n\n  // Function to log out the user\n\n  // Set up periodic token refresh\n  useEffect(() => {\n    if (refreshToken) {\n      const refreshInterval = setInterval(() => {\n        refreshTokenHandler();\n      }, 15 * 60 * 1000); // Refresh every 15 minutes\n      return () => clearInterval(refreshInterval); // Cleanup on unmount\n    }\n  }, [refreshToken, refreshTokenHandler]);\n\n  // Axios interceptor for refreshing token on 401 errors\n  useEffect(() => {\n    const interceptor = axios.interceptors.response.use(response => response, async error => {\n      var _error$response4;\n      if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 401 && refreshToken) {\n        const newAccessToken = await refreshTokenHandler();\n        if (newAccessToken) {\n          error.config.headers[\"Authorization\"] = `Bearer ${newAccessToken}`;\n          return axios(error.config);\n        }\n      }\n      return Promise.reject(error);\n    });\n    return () => axios.interceptors.response.eject(interceptor); // Cleanup interceptor on unmount\n  }, [refreshToken, refreshTokenHandler]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      userRole,\n      login,\n      logout,\n      refreshTokenHandler,\n      accessToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the AuthContext\n_s(AuthProvider, \"J74Q6AvebrsUkjc/1rvX2+ZMpkc=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","localStorage","getItem","userRole","setUserRole","accessToken","setAccessToken","refreshToken","setRefreshToken","login","email","password","loginData","response","post","status","role","username","data","setItem","s","error","_error$response","_error$response$data","console","Error","message","logout","clear","refreshTokenHandler","_error$response2","_error$response3","refreshInterval","setInterval","clearInterval","interceptor","interceptors","use","_error$response4","newAccessToken","config","headers","Promise","reject","eject","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/Prateek/OneDrive/Desktop/Practice/JObSearch/JobSearch-Portal/Frontend/src/Contexts/auth-context.js"],"sourcesContent":["import React, {\r\n  createContext,\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n} from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// Create the AuthContext\r\nconst AuthContext = createContext();\r\n\r\n// AuthProvider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(\r\n    !!localStorage.getItem(\"accessToken\")\r\n  );\r\n  const [userRole, setUserRole] = useState(localStorage.getItem(\"role\") || \"\");\r\n  const [accessToken, setAccessToken] = useState(\r\n    localStorage.getItem(\"accessToken\")\r\n  );\r\n  const [refreshToken, setRefreshToken] = useState(\r\n    localStorage.getItem(\"refreshToken\")\r\n  );\r\n\r\n  // Function to handle login\r\n  const login = async (email, password) => {\r\n    const loginData = { email, password };\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:3000/auth/login\",\r\n        loginData\r\n      );\r\n      if (response.status === 200) {\r\n        const { accessToken, refreshToken, role, username } = response.data;\r\n        localStorage.setItem(\"accessToken\", accessToken);\r\n        localStorage.setItem(\"refreshToken\", refreshToken);\r\n        localStorage.setItem(\"role\", role);\r\n        localStorage.s\r\n        setAccessToken(accessToken);\r\n        setRefreshToken(refreshToken);\r\n        setIsAuthenticated(true);\r\n        setUserRole(role);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login failed:\", error);\r\n      throw new Error(error.response?.data?.message || \"Login failed\");\r\n    }\r\n  };\r\n\r\n  const logout = useCallback(() => {\r\n    localStorage.clear();\r\n    setIsAuthenticated(false);\r\n    setUserRole(\"\");\r\n    setAccessToken(null);\r\n    setRefreshToken(null);\r\n  }, []);\r\n  // Function to refresh the access token\r\n  const refreshTokenHandler = useCallback(async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:3000/auth/refresh-token\",\r\n        { refreshToken }\r\n      );\r\n      if (response.status === 200) {\r\n        const { accessToken } = response.data;\r\n        localStorage.setItem(\"accessToken\", accessToken);\r\n        setAccessToken(accessToken);\r\n        return accessToken;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to refresh token:\", error);\r\n      if (error.response?.status === 403 || error.response?.status === 401) {\r\n        logout();\r\n      }\r\n    }\r\n  }, [refreshToken, logout]);\r\n\r\n  // Function to log out the user\r\n\r\n  // Set up periodic token refresh\r\n  useEffect(() => {\r\n    if (refreshToken) {\r\n      const refreshInterval = setInterval(() => {\r\n        refreshTokenHandler();\r\n      }, 15 * 60 * 1000); // Refresh every 15 minutes\r\n      return () => clearInterval(refreshInterval); // Cleanup on unmount\r\n    }\r\n  }, [refreshToken, refreshTokenHandler]);\r\n\r\n  // Axios interceptor for refreshing token on 401 errors\r\n  useEffect(() => {\r\n    const interceptor = axios.interceptors.response.use(\r\n      (response) => response,\r\n      async (error) => {\r\n        if (error.response?.status === 401 && refreshToken) {\r\n          const newAccessToken = await refreshTokenHandler();\r\n          if (newAccessToken) {\r\n            error.config.headers[\"Authorization\"] = `Bearer ${newAccessToken}`;\r\n            return axios(error.config);\r\n          }\r\n        }\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n    return () => axios.interceptors.response.eject(interceptor); // Cleanup interceptor on unmount\r\n  }, [refreshToken, refreshTokenHandler]);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        userRole,\r\n        login,\r\n        logout,\r\n        refreshTokenHandler,\r\n        accessToken,\r\n      }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the AuthContext\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}