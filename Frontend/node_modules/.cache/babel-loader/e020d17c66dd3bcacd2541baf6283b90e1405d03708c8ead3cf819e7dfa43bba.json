{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prateek\\\\OneDrive\\\\Desktop\\\\Practice\\\\JObSearch\\\\JobSearch-Portal\\\\Frontend\\\\src\\\\Contexts\\\\auth-context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// AuthContext.js\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Create the AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userRole, setUserRole] = useState(\"\");\n  const [accessToken, setAccessToken] = useState(localStorage.getItem(\"accessToken\"));\n  const [refreshToken, setRefreshToken] = useState(localStorage.getItem(\"refreshToken\"));\n  useEffect(() => {\n    const token = localStorage.getItem(\"accessToken\");\n    const role = localStorage.getItem(\"role\");\n    if (token) {\n      setIsAuthenticated(true);\n      setUserRole(role);\n    }\n  }, []);\n\n  // Function to handle login\n  const login = async (email, password) => {\n    const loginData = {\n      email,\n      password\n    };\n    try {\n      const response = await axios.post(\"http://localhost:3000/auth/login\", loginData);\n      if (response.status === 200) {\n        const {\n          accessToken,\n          refreshToken,\n          role\n        } = response.data; // Extract access token and refresh token\n        localStorage.setItem(\"accessToken\", accessToken);\n        localStorage.setItem(\"refreshToken\", refreshToken);\n        localStorage.setItem(\"role\", role);\n        setAccessToken(accessToken);\n        setRefreshToken(refreshToken);\n        setIsAuthenticated(true);\n        setUserRole(role);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Login failed:\", error);\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Login failed\");\n    }\n  };\n\n  // Function to refresh the access token using the refresh token\n  const refreshTokenHandler = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:3000/auth/refresh-token\",\n      // Your refresh token endpoint\n      {\n        refreshToken\n      });\n      if (response.status === 200) {\n        const {\n          accessToken\n        } = response.data; // Extract new access token\n        localStorage.setItem(\"accessToken\", accessToken);\n        setAccessToken(accessToken);\n        return accessToken;\n      }\n    } catch (error) {\n      console.error(\"Failed to refresh token:\", error);\n      // Optionally handle log out if refresh fails\n      logout();\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem(\"accessToken\");\n    localStorage.removeItem(\"refreshToken\");\n    localStorage.removeItem(\"role\");\n    setIsAuthenticated(false);\n    setUserRole(\"\");\n    setAccessToken(null);\n    setRefreshToken(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      userRole,\n      login,\n      logout,\n      refreshTokenHandler\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the AuthContext\n_s(AuthProvider, \"TNfmESGEn60ydCZWflr13KVLJrU=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","userRole","setUserRole","accessToken","setAccessToken","localStorage","getItem","refreshToken","setRefreshToken","token","role","login","email","password","loginData","response","post","status","data","setItem","error","_error$response","_error$response$data","console","Error","message","refreshTokenHandler","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/Prateek/OneDrive/Desktop/Practice/JObSearch/JobSearch-Portal/Frontend/src/Contexts/auth-context.js"],"sourcesContent":["// AuthContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// Create the AuthContext\r\nconst AuthContext = createContext();\r\n\r\n// Provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [userRole, setUserRole] = useState(\"\");\r\n  const [accessToken, setAccessToken] = useState(\r\n    localStorage.getItem(\"accessToken\")\r\n  );\r\n  const [refreshToken, setRefreshToken] = useState(\r\n    localStorage.getItem(\"refreshToken\")\r\n  );\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    const role = localStorage.getItem(\"role\");\r\n    if (token) {\r\n      setIsAuthenticated(true);\r\n      setUserRole(role);\r\n    }\r\n  }, []);\r\n\r\n  // Function to handle login\r\n  const login = async (email, password) => {\r\n    const loginData = { email, password };\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:3000/auth/login\",\r\n        loginData\r\n      );\r\n      if (response.status === 200) {\r\n        const { accessToken, refreshToken, role } = response.data; // Extract access token and refresh token\r\n        localStorage.setItem(\"accessToken\", accessToken);\r\n        localStorage.setItem(\"refreshToken\", refreshToken);\r\n        localStorage.setItem(\"role\", role);\r\n        setAccessToken(accessToken);\r\n        setRefreshToken(refreshToken);\r\n        setIsAuthenticated(true);\r\n        setUserRole(role);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login failed:\", error);\r\n      throw new Error(error.response?.data?.message || \"Login failed\");\r\n    }\r\n  };\r\n\r\n  // Function to refresh the access token using the refresh token\r\n  const refreshTokenHandler = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:3000/auth/refresh-token\", // Your refresh token endpoint\r\n        { refreshToken }\r\n      );\r\n      if (response.status === 200) {\r\n        const { accessToken } = response.data; // Extract new access token\r\n        localStorage.setItem(\"accessToken\", accessToken);\r\n        setAccessToken(accessToken);\r\n        return accessToken;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to refresh token:\", error);\r\n      // Optionally handle log out if refresh fails\r\n      logout();\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"accessToken\");\r\n    localStorage.removeItem(\"refreshToken\");\r\n    localStorage.removeItem(\"role\");\r\n    setIsAuthenticated(false);\r\n    setUserRole(\"\");\r\n    setAccessToken(null);\r\n    setRefreshToken(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ isAuthenticated, userRole, login, logout, refreshTokenHandler,  }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the AuthContext\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAC5Ce,YAAY,CAACC,OAAO,CAAC,aAAa,CACpC,CAAC;EACD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAC9Ce,YAAY,CAACC,OAAO,CAAC,cAAc,CACrC,CAAC;EAEDf,SAAS,CAAC,MAAM;IACd,MAAMkB,KAAK,GAAGJ,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACjD,MAAMI,IAAI,GAAGL,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,IAAIG,KAAK,EAAE;MACTT,kBAAkB,CAAC,IAAI,CAAC;MACxBE,WAAW,CAACQ,IAAI,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,MAAMC,SAAS,GAAG;MAAEF,KAAK;MAAEC;IAAS,CAAC;IAErC,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,IAAI,CAC/B,kCAAkC,EAClCF,SACF,CAAC;MACD,IAAIC,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAM;UAAEd,WAAW;UAAEI,YAAY;UAAEG;QAAK,CAAC,GAAGK,QAAQ,CAACG,IAAI,CAAC,CAAC;QAC3Db,YAAY,CAACc,OAAO,CAAC,aAAa,EAAEhB,WAAW,CAAC;QAChDE,YAAY,CAACc,OAAO,CAAC,cAAc,EAAEZ,YAAY,CAAC;QAClDF,YAAY,CAACc,OAAO,CAAC,MAAM,EAAET,IAAI,CAAC;QAClCN,cAAc,CAACD,WAAW,CAAC;QAC3BK,eAAe,CAACD,YAAY,CAAC;QAC7BP,kBAAkB,CAAC,IAAI,CAAC;QACxBE,WAAW,CAACQ,IAAI,CAAC;MACnB;IACF,CAAC,CAAC,OAAOU,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACdC,OAAO,CAACH,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,MAAM,IAAII,KAAK,CAAC,EAAAH,eAAA,GAAAD,KAAK,CAACL,QAAQ,cAAAM,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBH,IAAI,cAAAI,oBAAA,uBAApBA,oBAAA,CAAsBG,OAAO,KAAI,cAAc,CAAC;IAClE;EACF,CAAC;;EAED;EACA,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,IAAI,CAC/B,0CAA0C;MAAE;MAC5C;QAAET;MAAa,CACjB,CAAC;MACD,IAAIQ,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAM;UAAEd;QAAY,CAAC,GAAGY,QAAQ,CAACG,IAAI,CAAC,CAAC;QACvCb,YAAY,CAACc,OAAO,CAAC,aAAa,EAAEhB,WAAW,CAAC;QAChDC,cAAc,CAACD,WAAW,CAAC;QAC3B,OAAOA,WAAW;MACpB;IACF,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdG,OAAO,CAACH,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD;MACAO,MAAM,CAAC,CAAC;IACV;EACF,CAAC;EAED,MAAMA,MAAM,GAAGA,CAAA,KAAM;IACnBtB,YAAY,CAACuB,UAAU,CAAC,aAAa,CAAC;IACtCvB,YAAY,CAACuB,UAAU,CAAC,cAAc,CAAC;IACvCvB,YAAY,CAACuB,UAAU,CAAC,MAAM,CAAC;IAC/B5B,kBAAkB,CAAC,KAAK,CAAC;IACzBE,WAAW,CAAC,EAAE,CAAC;IACfE,cAAc,CAAC,IAAI,CAAC;IACpBI,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,oBACEd,OAAA,CAACC,WAAW,CAACkC,QAAQ;IACnBC,KAAK,EAAE;MAAE/B,eAAe;MAAEE,QAAQ;MAAEU,KAAK;MAAEgB,MAAM;MAAED;IAAsB,CAAE;IAAA7B,QAAA,EAC1EA;EAAQ;IAAAkC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAApC,EAAA,CAlFaF,YAAY;AAAAuC,EAAA,GAAZvC,YAAY;AAmFzB,OAAO,MAAMwC,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,OAAOhD,UAAU,CAACM,WAAW,CAAC;AAChC,CAAC;AAAC0C,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}